!function(){"use strict";var e=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_toggleButtonState(){return this._hasInvalidInput(this._inputEls)?this.disableButton():this.enableButton()}_hasInvalidInput(e){return!e.every((e=>e.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState(this._inputEls,this._submitButton)}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};const t=[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg "}],s={inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},n=".card-list",i="#image_preview",o="#edit-popup",r="#add-popup";class l{constructor(e){this._popupElement=document.querySelector(e),this._handleEscPress=this._handleEscPress.bind(this),this._handleOverlay=this._handleOverlay.bind(this),this._closeButton=this._popupElement.querySelector(".popup__close"),this.closePopup=this.closePopup.bind(this)}openPopup(){this._popupElement.classList.add("popup_is-opened"),this.setEventsListeners()}closePopup(){this._popupElement.classList.remove("popup_is-opened"),this.removeEventsListeners()}setEventsListeners(){this._closeButton.addEventListener("click",this.closePopup),document.addEventListener("keydown",this._handleEscPress),this._popupElement.addEventListener("mousedown",this._handleOverlay)}removeEventsListeners(){this._closeButton.removeEventListener("click",this.closePopup),document.removeEventListener("keydown",this._handleEscPress),this._popupElement.removeEventListener("mousedown",this._handleOverlay)}_handleEscPress(e){"Escape"===e.key&&this.closePopup()}_handleOverlay(e){e.target.classList.contains("popup")&&this.closePopup()}}class u extends l{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;var n,i;super(t),i=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())},(n="handleSubmit")in this?Object.defineProperty(this,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[n]=i,this._popupForm=this._popupElement.querySelector(".popup__form"),this._inputList=this._popupForm.querySelectorAll(".popup__input"),this._handleFormSubmit=s}_getInputValues(){const e={};return this._inputList.forEach((t=>e[t.name]=t.value)),e}setEventsListeners(){super.setEventsListeners(),this._popupForm.addEventListener("submit",this.handleSubmit)}removeEventsListeners(){super.removeEventsListeners(),this._popupForm.removeEventListener("submit",this.handleSubmit)}closePopup(){this._popupForm.reset(),super.closePopup()}}const p=document.querySelector(".profile__edit-button"),a=(document.querySelector("#edit_close-button"),document.querySelector("#edit-profile-form")),c=a.querySelector(".popup__input_type_name"),_=(document.querySelector(i),a.querySelector(".popup__input_type_description")),d=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector(o),document.querySelector(n));document.querySelector(r),document.querySelector("#image_preview-close").addEventListener("click",(function(){m.closePopup()})),p.addEventListener("click",(()=>{const{name:e,description:t}=h.getUserInfo();c.value=e,_.value=t,b.openPopup()}));const h=new class{constructor(e,t){this._userNameElement=document.querySelector(e),this._userDescriptionElement=document.querySelector(t)}getUserInfo(){return{name:this._userNameElement.textContent,description:this._userDescriptionElement.textContent}}setUserInfo(e){let{title:t,description:s}=e;this._userNameElement.textContent=t,this._userDescriptionElement.textContent=s}}(".profile__title",".profile__description"),m=new class extends l{constructor(e){super(e),this._imageElement=this._popupElement.querySelector(".popup__image"),this._imageCaption=this._popupElement.querySelector(".popup__image-title")}open(e){let{link:t,title:s}=e;this._imageElement.src=t,this._imageElement.alt=`Image of ${s}`,this._imageCaption.textContent=s,super.openPopup()}}(i),v=new class{constructor(e,t){let{items:s,renderer:n}=e;this._renderer=n,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:t,renderer:g},n),E=document.querySelector("#add-profile-form"),y=new e(s,a);y.enableValidation();const S=new e(s,E);S.enableValidation();const b=new u({popupSelector:o,handleFormSubmit:e=>{h.setUserInfo(e),b.closePopup(),y.disableButton()}});b.setEventsListeners();const L=new u({popupSelector:r,handleFormSubmit:e=>{v.addItem(q(e).getView()),L.closePopup(),S.disableButton()}});function g(e,t){t.prepend(e.getView())}t.reverse().forEach((e=>{g(q(e),d)}));const f=document.querySelector("#add_close-button");function q(e){return new class{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._element.querySelector(".card__button").addEventListener("click",(()=>this._handleLikeButton())),this._element.querySelector(".card__trash").addEventListener("click",(()=>this._handleDeleteCard())),this._element.querySelector(".card__image").addEventListener("click",(()=>this._handleImageClick(this._link,this._name)))}_handleLikeButton(){this._element.querySelector(".card__button").classList.toggle("card__button_active")}_handleDeleteCard(){this._element.remove(),this._element=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){this._element=this._getTemplate();const e=this._element.querySelector(".card__image");return e.src=this._link,e.alt=`Image of ${this._name}`,this._element.querySelector(".card__text").textContent=this._name,this._setEventListeners(),this._element}}(e,"#card-template",((e,t)=>{m.open({link:e,title:t})}))}document.querySelector(".profile__add-button").addEventListener("click",(function(){L.openPopup()})),f.addEventListener("click",(function(){L.closePopup()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,